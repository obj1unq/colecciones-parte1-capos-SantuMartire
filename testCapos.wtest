import capos.*
describe "Rolando" {

    test "Encontrar cosas" {
        rolando.encontrar(espada)
        rolando.encontrar(libro)
        rolando.encontrar(collar)
    //  assert.equals(2, rolando.mochila().size())
        assert.equals([espada,libro], rolando.mochila()) //Lista, aca no la usamos porque es mas comodo un conjunto (po el orden)
        assert.equals(#{espada,libro}, rolando.mochila()) //Conjunto
    }

    test "Ir al castillo" {
        rolando.encontrar(espada)
        rolando.encontrar(libro)
        rolando.llegarAHogar()
        assert.equals(0, rolando.mochila().size())
        //assert.that(rolando.mochila().isEmpty()) Esta es otra manera para saber si la mochila esta vacia
        //assert.equals(#{} , rolando.mochila()) Esta es otra manera
        rolando.encontrar(collar)
        rolando.llegarAHogar()
        assert.equals(#{espada, libro, collar}, castillo.cofre())
    }

    test "Posesiones"{
        castillo.cofre(#{collar,espada})
        rolando.mochila()(#{armadura})
        assert.equals(#{collar, espada, armadura}, rolando.posesiones())
        assert.notThat(rolando.posee(libro))
        assert.that(rolando.posee(collar))
        assert.that(rolando.posee(espada))
        assert.that(rolando.posee(armadura))
    }

    test "Historial"{
        rolando.encontrar(espada)
        rolando.encontrar(libro)
        rolando.encontrar(collar)
        rolando.llegarAHogar()
        rolando.encontrar(armadura)
        rolando.encontrar(collar)
        assert.equals([espada, libro, collar, armadura, collar], rolando.historial())
        assert.equals(armadura, rolando.artefactoEnHistorial(3))//Sirve para recorrer la lista y consultar el elemento que aparecio en el orden x
    }
}